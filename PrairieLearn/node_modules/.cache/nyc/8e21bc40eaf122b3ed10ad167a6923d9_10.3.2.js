var cov_eyim4jg25=function(){var path='/Users/fengyichen/pldev/newfolder/PrairieLearn/lib/require-frontend.js',hash='65e1bf14d2aeb68b68b3918c9fbb7c47adfc098d',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/fengyichen/pldev/newfolder/PrairieLearn/lib/require-frontend.js',statementMap:{'0':{start:{line:7,column:10},end:{line:7,column:37}},'1':{start:{line:8,column:8},end:{line:8,column:25}},'2':{start:{line:9,column:12},end:{line:9,column:28}},'3':{start:{line:10,column:16},end:{line:10,column:36}},'4':{start:{line:12,column:13},end:{line:12,column:32}},'5':{start:{line:14,column:0},end:{line:17,column:3}},'6':{start:{line:19,column:0},end:{line:30,column:2}},'7':{start:{line:20,column:15},end:{line:23,column:5}},'8':{start:{line:24,column:4},end:{line:28,column:5}},'9':{start:{line:25,column:8},end:{line:27,column:9}},'10':{start:{line:26,column:12},end:{line:26,column:37}},'11':{start:{line:29,column:4},end:{line:29,column:47}},'12':{start:{line:32,column:0},end:{line:49,column:2}},'13':{start:{line:36,column:4},end:{line:36,column:91}},'14':{start:{line:37,column:16},end:{line:37,column:17}},'15':{start:{line:38,column:4},end:{line:48,column:7}},'16':{start:{line:39,column:8},end:{line:42,column:9}},'17':{start:{line:40,column:12},end:{line:40,column:20}},'18':{start:{line:41,column:12},end:{line:41,column:37}},'19':{start:{line:43,column:8},end:{line:43,column:23}},'20':{start:{line:45,column:8},end:{line:45,column:39}},'21':{start:{line:45,column:32},end:{line:45,column:39}},'22':{start:{line:46,column:8},end:{line:46,column:75}},'23':{start:{line:47,column:8},end:{line:47,column:23}},'24':{start:{line:51,column:0},end:{line:51,column:27}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:19,column:20},end:{line:19,column:21}},loc:{start:{line:19,column:34},end:{line:30,column:1}},line:19},'1':{name:'(anonymous_1)',decl:{start:{line:32,column:33},end:{line:32,column:34}},loc:{start:{line:32,column:72},end:{line:49,column:1}},line:32},'2':{name:'(anonymous_2)',decl:{start:{line:38,column:55},end:{line:38,column:56}},loc:{start:{line:38,column:83},end:{line:44,column:5}},line:38},'3':{name:'(anonymous_3)',decl:{start:{line:44,column:7},end:{line:44,column:8}},loc:{start:{line:44,column:21},end:{line:48,column:5}},line:44}},branchMap:{'0':{loc:{start:{line:25,column:8},end:{line:27,column:9}},type:'if',locations:[{start:{line:25,column:8},end:{line:27,column:9}},{start:{line:25,column:8},end:{line:27,column:9}}],line:25},'1':{loc:{start:{line:39,column:8},end:{line:42,column:9}},type:'if',locations:[{start:{line:39,column:8},end:{line:42,column:9}},{start:{line:39,column:8},end:{line:42,column:9}}],line:39},'2':{loc:{start:{line:45,column:8},end:{line:45,column:39}},type:'if',locations:[{start:{line:45,column:8},end:{line:45,column:39}},{start:{line:45,column:8},end:{line:45,column:39}}],line:45}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0},f:{'0':0,'1':0,'2':0,'3':0},b:{'0':[0,0],'1':[0,0],'2':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Require frontend modules.
 *
 * Note: Do not use to require backend modules, as they should be CommonJS
 * modules and not AMD modules.
 */var ERR=(++cov_eyim4jg25.s[0],require('async-stacktrace'));var _=(++cov_eyim4jg25.s[1],require('lodash'));var async=(++cov_eyim4jg25.s[2],require('async'));var requirejs=(++cov_eyim4jg25.s[3],require('requirejs'));var logger=(++cov_eyim4jg25.s[4],require('./logger'));++cov_eyim4jg25.s[5];requirejs.config({nodeRequire:require,baseUrl:'./public/localscripts/calculationQuestion'});++cov_eyim4jg25.s[6];requirejs.onError=function(err){++cov_eyim4jg25.f[0];var data=(++cov_eyim4jg25.s[7],{errorMsg:err.toString(),stack:err.stack});++cov_eyim4jg25.s[8];for(var e in err){++cov_eyim4jg25.s[9];if(err.hasOwnProperty(e)){++cov_eyim4jg25.b[0][0];++cov_eyim4jg25.s[10];data[e]=String(err[e]);}else{++cov_eyim4jg25.b[0][1];}}++cov_eyim4jg25.s[11];logger.error('requirejs load error',data);};++cov_eyim4jg25.s[12];requirejs.undefQuestionServers=function(coursePath,logger,callback){++cov_eyim4jg25.f[1];++cov_eyim4jg25.s[13];// Only try and undefine modules that are already defined, as listed in:
//     requireFrontend.s.contexts._.defined
// This is necessary because of incomplete questions (in particular, those with info.json but no server.js).
logger.verbose('Unloading cached copies of server.js files in '+coursePath+' ...');var count=(++cov_eyim4jg25.s[14],0);++cov_eyim4jg25.s[15];async.each(_.keys(requirejs.s.contexts._.defined),function(modPath,callback){++cov_eyim4jg25.f[2];++cov_eyim4jg25.s[16];if(_.startsWith(modPath,coursePath)){++cov_eyim4jg25.b[1][0];++cov_eyim4jg25.s[17];count++;++cov_eyim4jg25.s[18];requirejs.undef(modPath);}else{++cov_eyim4jg25.b[1][1];}++cov_eyim4jg25.s[19];callback(null);},function(err){++cov_eyim4jg25.f[3];++cov_eyim4jg25.s[20];if(ERR(err,callback)){++cov_eyim4jg25.b[2][0];++cov_eyim4jg25.s[21];return;}else{++cov_eyim4jg25.b[2][1];}++cov_eyim4jg25.s[22];logger.verbose('Successfully unloaded '+count+' cached files');++cov_eyim4jg25.s[23];callback(null);});};++cov_eyim4jg25.s[24];module.exports=requirejs;