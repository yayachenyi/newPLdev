var cov_2gxvinfo49=function(){var path="/Users/fengyichen/pldev/newfolder/PrairieLearn/public/localscripts/calculationQuestion/PrairieRandom.js",hash="bd2891a1182e7cde509cf3cf1075a3f22be9c2aa",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/fengyichen/pldev/newfolder/PrairieLearn/public/localscripts/calculationQuestion/PrairieRandom.js",statementMap:{"0":{start:{line:1,column:0},end:{line:504,column:73}},"1":{start:{line:2,column:0},end:{line:502,column:3}},"2":{start:{line:9,column:8},end:{line:9,column:70}},"3":{start:{line:10,column:8},end:{line:10,column:61}},"4":{start:{line:12,column:8},end:{line:12,column:42}},"5":{start:{line:21,column:4},end:{line:26,column:6}},"6":{start:{line:22,column:8},end:{line:22,column:44}},"7":{start:{line:23,column:8},end:{line:23,column:44}},"8":{start:{line:25,column:8},end:{line:25,column:66}},"9":{start:{line:35,column:4},end:{line:43,column:6}},"10":{start:{line:36,column:8},end:{line:36,column:44}},"11":{start:{line:37,column:8},end:{line:37,column:45}},"12":{start:{line:38,column:8},end:{line:38,column:47}},"13":{start:{line:39,column:16},end:{line:39,column:38}},"14":{start:{line:41,column:16},end:{line:41,column:62}},"15":{start:{line:42,column:8},end:{line:42,column:30}},"16":{start:{line:52,column:4},end:{line:64,column:6}},"17":{start:{line:53,column:8},end:{line:53,column:44}},"18":{start:{line:54,column:8},end:{line:54,column:45}},"19":{start:{line:55,column:8},end:{line:55,column:47}},"20":{start:{line:56,column:16},end:{line:56,column:38}},"21":{start:{line:58,column:8},end:{line:62,column:26}},"22":{start:{line:60,column:12},end:{line:60,column:63}},"23":{start:{line:61,column:12},end:{line:61,column:31}},"24":{start:{line:63,column:8},end:{line:63,column:17}},"25":{start:{line:71,column:4},end:{line:77,column:6}},"26":{start:{line:72,column:8},end:{line:72,column:60}},"27":{start:{line:74,column:8},end:{line:75,column:24}},"28":{start:{line:75,column:12},end:{line:75,column:24}},"29":{start:{line:76,column:8},end:{line:76,column:21}},"30":{start:{line:84,column:4},end:{line:90,column:6}},"31":{start:{line:85,column:8},end:{line:85,column:57}},"32":{start:{line:87,column:8},end:{line:88,column:21}},"33":{start:{line:88,column:12},end:{line:88,column:21}},"34":{start:{line:89,column:8},end:{line:89,column:18}},"35":{start:{line:99,column:4},end:{line:106,column:6}},"36":{start:{line:100,column:8},end:{line:100,column:38}},"37":{start:{line:101,column:16},end:{line:101,column:18}},"38":{start:{line:102,column:8},end:{line:104,column:9}},"39":{start:{line:103,column:12},end:{line:103,column:44}},"40":{start:{line:105,column:8},end:{line:105,column:17}},"41":{start:{line:116,column:4},end:{line:123,column:6}},"42":{start:{line:117,column:8},end:{line:117,column:38}},"43":{start:{line:118,column:16},end:{line:118,column:18}},"44":{start:{line:119,column:8},end:{line:121,column:9}},"45":{start:{line:120,column:12},end:{line:120,column:49}},"46":{start:{line:122,column:8},end:{line:122,column:17}},"47":{start:{line:133,column:4},end:{line:148,column:6}},"48":{start:{line:134,column:8},end:{line:134,column:38}},"49":{start:{line:136,column:8},end:{line:146,column:26}},"50":{start:{line:137,column:12},end:{line:137,column:27}},"51":{start:{line:138,column:12},end:{line:138,column:19}},"52":{start:{line:139,column:12},end:{line:145,column:13}},"53":{start:{line:140,column:16},end:{line:140,column:49}},"54":{start:{line:141,column:16},end:{line:141,column:26}},"55":{start:{line:142,column:16},end:{line:144,column:17}},"56":{start:{line:143,column:20},end:{line:143,column:36}},"57":{start:{line:147,column:8},end:{line:147,column:17}},"58":{start:{line:158,column:4},end:{line:175,column:6}},"59":{start:{line:159,column:8},end:{line:159,column:38}},"60":{start:{line:160,column:16},end:{line:160,column:18}},"61":{start:{line:161,column:8},end:{line:173,column:9}},"62":{start:{line:162,column:20},end:{line:162,column:48}},"63":{start:{line:163,column:28},end:{line:163,column:33}},"64":{start:{line:164,column:12},end:{line:169,column:13}},"65":{start:{line:165,column:16},end:{line:168,column:17}},"66":{start:{line:166,column:20},end:{line:166,column:37}},"67":{start:{line:167,column:20},end:{line:167,column:26}},"68":{start:{line:170,column:12},end:{line:172,column:13}},"69":{start:{line:171,column:16},end:{line:171,column:26}},"70":{start:{line:174,column:8},end:{line:174,column:17}},"71":{start:{line:183,column:4},end:{line:204,column:6}},"72":{start:{line:184,column:16},end:{line:184,column:26}},"73":{start:{line:186,column:8},end:{line:202,column:9}},"74":{start:{line:187,column:22},end:{line:187,column:23}},"75":{start:{line:188,column:12},end:{line:190,column:13}},"76":{start:{line:189,column:16},end:{line:189,column:32}},"77":{start:{line:191,column:20},end:{line:191,column:35}},"78":{start:{line:192,column:22},end:{line:192,column:23}},"79":{start:{line:193,column:12},end:{line:198,column:13}},"80":{start:{line:194,column:16},end:{line:194,column:38}},"81":{start:{line:195,column:16},end:{line:197,column:17}},"82":{start:{line:196,column:20},end:{line:196,column:26}},"83":{start:{line:199,column:12},end:{line:199,column:35}},"84":{start:{line:201,column:12},end:{line:201,column:39}},"85":{start:{line:203,column:8},end:{line:203,column:22}},"86":{start:{line:212,column:4},end:{line:218,column:6}},"87":{start:{line:213,column:18},end:{line:213,column:20}},"88":{start:{line:214,column:8},end:{line:216,column:9}},"89":{start:{line:215,column:12},end:{line:215,column:27}},"90":{start:{line:217,column:8},end:{line:217,column:19}},"91":{start:{line:227,column:4},end:{line:246,column:6}},"92":{start:{line:228,column:21},end:{line:228,column:31}},"93":{start:{line:229,column:8},end:{line:230,column:23}},"94":{start:{line:230,column:12},end:{line:230,column:23}},"95":{start:{line:231,column:24},end:{line:231,column:26}},"96":{start:{line:232,column:20},end:{line:232,column:31}},"97":{start:{line:233,column:8},end:{line:234,column:34}},"98":{start:{line:234,column:20},end:{line:234,column:33}},"99":{start:{line:235,column:8},end:{line:244,column:9}},"100":{start:{line:236,column:12},end:{line:241,column:13}},"101":{start:{line:237,column:16},end:{line:237,column:62}},"102":{start:{line:238,column:16},end:{line:238,column:33}},"103":{start:{line:240,column:16},end:{line:240,column:56}},"104":{start:{line:242,column:12},end:{line:242,column:39}},"105":{start:{line:243,column:12},end:{line:243,column:33}},"106":{start:{line:245,column:8},end:{line:245,column:25}},"107":{start:{line:253,column:4},end:{line:265,column:6}},"108":{start:{line:254,column:16},end:{line:254,column:18}},"109":{start:{line:255,column:8},end:{line:257,column:9}},"110":{start:{line:256,column:12},end:{line:256,column:22}},"111":{start:{line:258,column:8},end:{line:263,column:9}},"112":{start:{line:259,column:12},end:{line:259,column:39}},"113":{start:{line:260,column:12},end:{line:260,column:23}},"114":{start:{line:261,column:12},end:{line:261,column:24}},"115":{start:{line:262,column:12},end:{line:262,column:23}},"116":{start:{line:264,column:8},end:{line:264,column:17}},"117":{start:{line:272,column:4},end:{line:280,column:6}},"118":{start:{line:273,column:19},end:{line:273,column:21}},"119":{start:{line:274,column:8},end:{line:276,column:9}},"120":{start:{line:275,column:12},end:{line:275,column:30}},"121":{start:{line:277,column:8},end:{line:279,column:9}},"122":{start:{line:278,column:12},end:{line:278,column:35}},"123":{start:{line:287,column:4},end:{line:298,column:6}},"124":{start:{line:288,column:8},end:{line:288,column:44}},"125":{start:{line:288,column:16},end:{line:288,column:44}},"126":{start:{line:289,column:8},end:{line:289,column:44}},"127":{start:{line:289,column:16},end:{line:289,column:44}},"128":{start:{line:290,column:8},end:{line:290,column:44}},"129":{start:{line:290,column:16},end:{line:290,column:44}},"130":{start:{line:291,column:8},end:{line:291,column:44}},"131":{start:{line:291,column:16},end:{line:291,column:44}},"132":{start:{line:292,column:8},end:{line:292,column:44}},"133":{start:{line:292,column:16},end:{line:292,column:44}},"134":{start:{line:293,column:8},end:{line:293,column:44}},"135":{start:{line:293,column:16},end:{line:293,column:44}},"136":{start:{line:294,column:8},end:{line:294,column:44}},"137":{start:{line:294,column:16},end:{line:294,column:44}},"138":{start:{line:295,column:8},end:{line:295,column:44}},"139":{start:{line:295,column:16},end:{line:295,column:44}},"140":{start:{line:296,column:8},end:{line:296,column:44}},"141":{start:{line:296,column:16},end:{line:296,column:44}},"142":{start:{line:297,column:8},end:{line:297,column:44}},"143":{start:{line:297,column:16},end:{line:297,column:44}},"144":{start:{line:305,column:4},end:{line:309,column:6}},"145":{start:{line:306,column:19},end:{line:306,column:43}},"146":{start:{line:307,column:8},end:{line:307,column:67}},"147":{start:{line:308,column:8},end:{line:308,column:20}},"148":{start:{line:317,column:4},end:{line:327,column:6}},"149":{start:{line:318,column:25},end:{line:318,column:78}},"150":{start:{line:319,column:19},end:{line:319,column:36}},"151":{start:{line:320,column:24},end:{line:320,column:47}},"152":{start:{line:321,column:25},end:{line:321,column:66}},"153":{start:{line:322,column:19},end:{line:322,column:44}},"154":{start:{line:323,column:26},end:{line:323,column:55}},"155":{start:{line:324,column:21},end:{line:324,column:89}},"156":{start:{line:325,column:8},end:{line:325,column:49}},"157":{start:{line:325,column:36},end:{line:325,column:46}},"158":{start:{line:326,column:8},end:{line:326,column:20}},"159":{start:{line:337,column:4},end:{line:356,column:6}},"160":{start:{line:338,column:8},end:{line:338,column:53}},"161":{start:{line:339,column:8},end:{line:339,column:59}},"162":{start:{line:340,column:8},end:{line:340,column:61}},"163":{start:{line:341,column:8},end:{line:341,column:65}},"164":{start:{line:342,column:23},end:{line:342,column:50}},"165":{start:{line:343,column:19},end:{line:343,column:21}},"166":{start:{line:344,column:8},end:{line:354,column:9}},"167":{start:{line:345,column:12},end:{line:353,column:13}},"168":{start:{line:346,column:16},end:{line:350,column:17}},"169":{start:{line:347,column:20},end:{line:347,column:30}},"170":{start:{line:349,column:20},end:{line:349,column:61}},"171":{start:{line:352,column:16},end:{line:352,column:64}},"172":{start:{line:355,column:8},end:{line:355,column:17}},"173":{start:{line:364,column:4},end:{line:371,column:6}},"174":{start:{line:365,column:8},end:{line:365,column:59}},"175":{start:{line:366,column:8},end:{line:366,column:53}},"176":{start:{line:367,column:8},end:{line:370,column:10}},"177":{start:{line:379,column:4},end:{line:387,column:6}},"178":{start:{line:380,column:8},end:{line:380,column:59}},"179":{start:{line:381,column:8},end:{line:381,column:56}},"180":{start:{line:382,column:8},end:{line:386,column:10}},"181":{start:{line:393,column:4},end:{line:400,column:6}},"182":{start:{line:395,column:8},end:{line:399,column:9}},"183":{start:{line:396,column:16},end:{line:396,column:60}},"184":{start:{line:397,column:16},end:{line:397,column:58}},"185":{start:{line:398,column:16},end:{line:398,column:60}},"186":{start:{line:407,column:4},end:{line:414,column:6}},"187":{start:{line:408,column:8},end:{line:408,column:38}},"188":{start:{line:409,column:16},end:{line:409,column:18}},"189":{start:{line:410,column:8},end:{line:412,column:9}},"190":{start:{line:411,column:12},end:{line:411,column:36}},"191":{start:{line:413,column:8},end:{line:413,column:17}},"192":{start:{line:423,column:4},end:{line:454,column:6}},"193":{start:{line:424,column:26},end:{line:424,column:109}},"194":{start:{line:426,column:8},end:{line:430,column:9}},"195":{start:{line:427,column:12},end:{line:427,column:100}},"196":{start:{line:427,column:77},end:{line:427,column:97}},"197":{start:{line:429,column:12},end:{line:429,column:21}},"198":{start:{line:432,column:8},end:{line:441,column:9}},"199":{start:{line:433,column:35},end:{line:433,column:60}},"200":{start:{line:434,column:12},end:{line:438,column:15}},"201":{start:{line:435,column:16},end:{line:435,column:125}},"202":{start:{line:435,column:102},end:{line:435,column:122}},"203":{start:{line:437,column:16},end:{line:437,column:125}},"204":{start:{line:437,column:102},end:{line:437,column:122}},"205":{start:{line:440,column:12},end:{line:440,column:21}},"206":{start:{line:443,column:8},end:{line:451,column:9}},"207":{start:{line:444,column:35},end:{line:444,column:60}},"208":{start:{line:445,column:29},end:{line:447,column:14}},"209":{start:{line:446,column:16},end:{line:446,column:125}},"210":{start:{line:446,column:102},end:{line:446,column:122}},"211":{start:{line:448,column:12},end:{line:448,column:44}},"212":{start:{line:450,column:12},end:{line:450,column:21}},"213":{start:{line:453,column:8},end:{line:453,column:17}},"214":{start:{line:463,column:4},end:{line:468,column:6}},"215":{start:{line:464,column:19},end:{line:464,column:23}},"216":{start:{line:465,column:8},end:{line:467,column:25}},"217":{start:{line:466,column:12},end:{line:466,column:67}},"218":{start:{line:478,column:4},end:{line:497,column:6}},"219":{start:{line:480,column:22},end:{line:480,column:23}},"220":{start:{line:481,column:8},end:{line:495,column:47}},"221":{start:{line:482,column:12},end:{line:482,column:29}},"222":{start:{line:483,column:12},end:{line:483,column:83}},"223":{start:{line:484,column:12},end:{line:484,column:27}},"224":{start:{line:485,column:12},end:{line:485,column:92}},"225":{start:{line:486,column:12},end:{line:494,column:13}},"226":{start:{line:487,column:16},end:{line:488,column:32}},"227":{start:{line:488,column:20},end:{line:488,column:32}},"228":{start:{line:489,column:16},end:{line:489,column:51}},"229":{start:{line:490,column:16},end:{line:490,column:36}},"230":{start:{line:491,column:16},end:{line:491,column:64}},"231":{start:{line:492,column:16},end:{line:492,column:59}},"232":{start:{line:493,column:16},end:{line:493,column:96}},"233":{start:{line:496,column:8},end:{line:496,column:27}},"234":{start:{line:499,column:4},end:{line:501,column:6}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:1,column:1},end:{line:1,column:2}},loc:{start:{line:1,column:39},end:{line:504,column:1}},line:1},"1":{name:"(anonymous_1)",decl:{start:{line:2,column:50},end:{line:2,column:51}},loc:{start:{line:2,column:85},end:{line:502,column:1}},line:2},"2":{name:"RandomGenerator",decl:{start:{line:8,column:13},end:{line:8,column:28}},loc:{start:{line:8,column:35},end:{line:13,column:5}},line:8},"3":{name:"(anonymous_3)",decl:{start:{line:21,column:41},end:{line:21,column:42}},loc:{start:{line:21,column:60},end:{line:26,column:5}},line:21},"4":{name:"(anonymous_4)",decl:{start:{line:35,column:40},end:{line:35,column:41}},loc:{start:{line:35,column:65},end:{line:43,column:5}},line:35},"5":{name:"(anonymous_5)",decl:{start:{line:52,column:47},end:{line:52,column:48}},loc:{start:{line:52,column:72},end:{line:64,column:5}},line:52},"6":{name:"(anonymous_6)",decl:{start:{line:71,column:41},end:{line:71,column:42}},loc:{start:{line:71,column:60},end:{line:77,column:5}},line:71},"7":{name:"(anonymous_7)",decl:{start:{line:84,column:41},end:{line:84,column:42}},loc:{start:{line:84,column:59},end:{line:90,column:5}},line:84},"8":{name:"(anonymous_8)",decl:{start:{line:99,column:46},end:{line:99,column:47}},loc:{start:{line:99,column:68},end:{line:106,column:5}},line:99},"9":{name:"(anonymous_9)",decl:{start:{line:116,column:45},end:{line:116,column:46}},loc:{start:{line:116,column:73},end:{line:123,column:5}},line:116},"10":{name:"(anonymous_10)",decl:{start:{line:133,column:52},end:{line:133,column:53}},loc:{start:{line:133,column:80},end:{line:148,column:5}},line:133},"11":{name:"(anonymous_11)",decl:{start:{line:158,column:51},end:{line:158,column:52}},loc:{start:{line:158,column:79},end:{line:175,column:5}},line:158},"12":{name:"(anonymous_12)",decl:{start:{line:183,column:41},end:{line:183,column:42}},loc:{start:{line:183,column:62},end:{line:204,column:5}},line:183},"13":{name:"(anonymous_13)",decl:{start:{line:212,column:39},end:{line:212,column:40}},loc:{start:{line:212,column:57},end:{line:218,column:5}},line:212},"14":{name:"(anonymous_14)",decl:{start:{line:227,column:42},end:{line:227,column:43}},loc:{start:{line:227,column:66},end:{line:246,column:5}},line:227},"15":{name:"(anonymous_15)",decl:{start:{line:253,column:41},end:{line:253,column:42}},loc:{start:{line:253,column:53},end:{line:265,column:5}},line:253},"16":{name:"(anonymous_16)",decl:{start:{line:272,column:45},end:{line:272,column:46}},loc:{start:{line:272,column:65},end:{line:280,column:5}},line:272},"17":{name:"(anonymous_17)",decl:{start:{line:287,column:40},end:{line:287,column:41}},loc:{start:{line:287,column:95},end:{line:298,column:5}},line:287},"18":{name:"(anonymous_18)",decl:{start:{line:305,column:40},end:{line:305,column:41}},loc:{start:{line:305,column:89},end:{line:309,column:5}},line:305},"19":{name:"(anonymous_19)",decl:{start:{line:317,column:52},end:{line:317,column:53}},loc:{start:{line:317,column:73},end:{line:327,column:5}},line:317},"20":{name:"(anonymous_20)",decl:{start:{line:325,column:23},end:{line:325,column:24}},loc:{start:{line:325,column:35},end:{line:325,column:47}},line:325},"21":{name:"(anonymous_21)",decl:{start:{line:337,column:41},end:{line:337,column:42}},loc:{start:{line:337,column:89},end:{line:356,column:5}},line:337},"22":{name:"(anonymous_22)",decl:{start:{line:364,column:40},end:{line:364,column:41}},loc:{start:{line:364,column:67},end:{line:371,column:5}},line:364},"23":{name:"(anonymous_23)",decl:{start:{line:379,column:41},end:{line:379,column:42}},loc:{start:{line:379,column:69},end:{line:387,column:5}},line:379},"24":{name:"(anonymous_24)",decl:{start:{line:393,column:41},end:{line:393,column:42}},loc:{start:{line:393,column:52},end:{line:400,column:5}},line:393},"25":{name:"(anonymous_25)",decl:{start:{line:407,column:46},end:{line:407,column:47}},loc:{start:{line:407,column:58},end:{line:414,column:5}},line:407},"26":{name:"(anonymous_26)",decl:{start:{line:423,column:48},end:{line:423,column:49}},loc:{start:{line:423,column:84},end:{line:454,column:5}},line:423},"27":{name:"(anonymous_27)",decl:{start:{line:426,column:24},end:{line:426,column:25}},loc:{start:{line:426,column:38},end:{line:428,column:9}},line:426},"28":{name:"(anonymous_28)",decl:{start:{line:427,column:64},end:{line:427,column:65}},loc:{start:{line:427,column:76},end:{line:427,column:98}},line:427},"29":{name:"(anonymous_29)",decl:{start:{line:432,column:32},end:{line:432,column:33}},loc:{start:{line:432,column:44},end:{line:439,column:9}},line:432},"30":{name:"(anonymous_30)",decl:{start:{line:434,column:31},end:{line:434,column:32}},loc:{start:{line:434,column:45},end:{line:436,column:13}},line:434},"31":{name:"(anonymous_31)",decl:{start:{line:435,column:89},end:{line:435,column:90}},loc:{start:{line:435,column:101},end:{line:435,column:123}},line:435},"32":{name:"(anonymous_32)",decl:{start:{line:436,column:30},end:{line:436,column:31}},loc:{start:{line:436,column:44},end:{line:438,column:13}},line:436},"33":{name:"(anonymous_33)",decl:{start:{line:437,column:89},end:{line:437,column:90}},loc:{start:{line:437,column:101},end:{line:437,column:123}},line:437},"34":{name:"(anonymous_34)",decl:{start:{line:443,column:32},end:{line:443,column:33}},loc:{start:{line:443,column:44},end:{line:449,column:9}},line:443},"35":{name:"(anonymous_35)",decl:{start:{line:445,column:43},end:{line:445,column:44}},loc:{start:{line:445,column:57},end:{line:447,column:13}},line:445},"36":{name:"(anonymous_36)",decl:{start:{line:446,column:89},end:{line:446,column:90}},loc:{start:{line:446,column:101},end:{line:446,column:123}},line:446},"37":{name:"(anonymous_37)",decl:{start:{line:463,column:51},end:{line:463,column:52}},loc:{start:{line:463,column:88},end:{line:468,column:5}},line:463},"38":{name:"(anonymous_38)",decl:{start:{line:465,column:39},end:{line:465,column:40}},loc:{start:{line:465,column:59},end:{line:467,column:9}},line:465},"39":{name:"(anonymous_39)",decl:{start:{line:478,column:44},end:{line:478,column:45}},loc:{start:{line:478,column:94},end:{line:497,column:5}},line:478}},branchMap:{"0":{loc:{start:{line:9,column:15},end:{line:9,column:69}},type:"cond-expr",locations:[{start:{line:9,column:38},end:{line:9,column:48}},{start:{line:9,column:51},end:{line:9,column:69}}],line:9},"1":{loc:{start:{line:22,column:14},end:{line:22,column:43}},type:"cond-expr",locations:[{start:{line:22,column:36},end:{line:22,column:37}},{start:{line:22,column:40},end:{line:22,column:43}}],line:22},"2":{loc:{start:{line:23,column:14},end:{line:23,column:43}},type:"cond-expr",locations:[{start:{line:23,column:36},end:{line:23,column:37}},{start:{line:23,column:40},end:{line:23,column:43}}],line:23},"3":{loc:{start:{line:36,column:14},end:{line:36,column:43}},type:"cond-expr",locations:[{start:{line:36,column:36},end:{line:36,column:37}},{start:{line:36,column:40},end:{line:36,column:43}}],line:36},"4":{loc:{start:{line:37,column:14},end:{line:37,column:44}},type:"cond-expr",locations:[{start:{line:37,column:36},end:{line:37,column:38}},{start:{line:37,column:41},end:{line:37,column:44}}],line:37},"5":{loc:{start:{line:38,column:15},end:{line:38,column:46}},type:"cond-expr",locations:[{start:{line:38,column:38},end:{line:38,column:39}},{start:{line:38,column:42},end:{line:38,column:46}}],line:38},"6":{loc:{start:{line:53,column:14},end:{line:53,column:43}},type:"cond-expr",locations:[{start:{line:53,column:36},end:{line:53,column:37}},{start:{line:53,column:40},end:{line:53,column:43}}],line:53},"7":{loc:{start:{line:54,column:14},end:{line:54,column:44}},type:"cond-expr",locations:[{start:{line:54,column:36},end:{line:54,column:38}},{start:{line:54,column:41},end:{line:54,column:44}}],line:54},"8":{loc:{start:{line:55,column:15},end:{line:55,column:46}},type:"cond-expr",locations:[{start:{line:55,column:38},end:{line:55,column:39}},{start:{line:55,column:42},end:{line:55,column:46}}],line:55},"9":{loc:{start:{line:72,column:19},end:{line:72,column:59}},type:"cond-expr",locations:[{start:{line:72,column:46},end:{line:72,column:49}},{start:{line:72,column:51},end:{line:72,column:59}}],line:72},"10":{loc:{start:{line:74,column:8},end:{line:75,column:24}},type:"if",locations:[{start:{line:74,column:8},end:{line:75,column:24}},{start:{line:74,column:8},end:{line:75,column:24}}],line:74},"11":{loc:{start:{line:85,column:18},end:{line:85,column:56}},type:"cond-expr",locations:[{start:{line:85,column:44},end:{line:85,column:47}},{start:{line:85,column:49},end:{line:85,column:56}}],line:85},"12":{loc:{start:{line:87,column:8},end:{line:88,column:21}},type:"if",locations:[{start:{line:87,column:8},end:{line:88,column:21}},{start:{line:87,column:8},end:{line:88,column:21}}],line:87},"13":{loc:{start:{line:100,column:12},end:{line:100,column:37}},type:"cond-expr",locations:[{start:{line:100,column:32},end:{line:100,column:33}},{start:{line:100,column:36},end:{line:100,column:37}}],line:100},"14":{loc:{start:{line:117,column:12},end:{line:117,column:37}},type:"cond-expr",locations:[{start:{line:117,column:32},end:{line:117,column:33}},{start:{line:117,column:36},end:{line:117,column:37}}],line:117},"15":{loc:{start:{line:134,column:12},end:{line:134,column:37}},type:"cond-expr",locations:[{start:{line:134,column:32},end:{line:134,column:33}},{start:{line:134,column:36},end:{line:134,column:37}}],line:134},"16":{loc:{start:{line:142,column:16},end:{line:144,column:17}},type:"if",locations:[{start:{line:142,column:16},end:{line:144,column:17}},{start:{line:142,column:16},end:{line:144,column:17}}],line:142},"17":{loc:{start:{line:159,column:12},end:{line:159,column:37}},type:"cond-expr",locations:[{start:{line:159,column:32},end:{line:159,column:33}},{start:{line:159,column:36},end:{line:159,column:37}}],line:159},"18":{loc:{start:{line:165,column:16},end:{line:168,column:17}},type:"if",locations:[{start:{line:165,column:16},end:{line:168,column:17}},{start:{line:165,column:16},end:{line:168,column:17}}],line:165},"19":{loc:{start:{line:170,column:12},end:{line:172,column:13}},type:"if",locations:[{start:{line:170,column:12},end:{line:172,column:13}},{start:{line:170,column:12},end:{line:172,column:13}}],line:170},"20":{loc:{start:{line:186,column:8},end:{line:202,column:9}},type:"if",locations:[{start:{line:186,column:8},end:{line:202,column:9}},{start:{line:186,column:8},end:{line:202,column:9}}],line:186},"21":{loc:{start:{line:195,column:16},end:{line:197,column:17}},type:"if",locations:[{start:{line:195,column:16},end:{line:197,column:17}},{start:{line:195,column:16},end:{line:197,column:17}}],line:195},"22":{loc:{start:{line:229,column:8},end:{line:230,column:23}},type:"if",locations:[{start:{line:229,column:8},end:{line:230,column:23}},{start:{line:229,column:8},end:{line:230,column:23}}],line:229},"23":{loc:{start:{line:233,column:8},end:{line:234,column:34}},type:"if",locations:[{start:{line:233,column:8},end:{line:234,column:34}},{start:{line:233,column:8},end:{line:234,column:34}}],line:233},"24":{loc:{start:{line:236,column:12},end:{line:241,column:13}},type:"if",locations:[{start:{line:236,column:12},end:{line:241,column:13}},{start:{line:236,column:12},end:{line:241,column:13}}],line:236},"25":{loc:{start:{line:288,column:8},end:{line:288,column:44}},type:"if",locations:[{start:{line:288,column:8},end:{line:288,column:44}},{start:{line:288,column:8},end:{line:288,column:44}}],line:288},"26":{loc:{start:{line:289,column:8},end:{line:289,column:44}},type:"if",locations:[{start:{line:289,column:8},end:{line:289,column:44}},{start:{line:289,column:8},end:{line:289,column:44}}],line:289},"27":{loc:{start:{line:290,column:8},end:{line:290,column:44}},type:"if",locations:[{start:{line:290,column:8},end:{line:290,column:44}},{start:{line:290,column:8},end:{line:290,column:44}}],line:290},"28":{loc:{start:{line:291,column:8},end:{line:291,column:44}},type:"if",locations:[{start:{line:291,column:8},end:{line:291,column:44}},{start:{line:291,column:8},end:{line:291,column:44}}],line:291},"29":{loc:{start:{line:292,column:8},end:{line:292,column:44}},type:"if",locations:[{start:{line:292,column:8},end:{line:292,column:44}},{start:{line:292,column:8},end:{line:292,column:44}}],line:292},"30":{loc:{start:{line:293,column:8},end:{line:293,column:44}},type:"if",locations:[{start:{line:293,column:8},end:{line:293,column:44}},{start:{line:293,column:8},end:{line:293,column:44}}],line:293},"31":{loc:{start:{line:294,column:8},end:{line:294,column:44}},type:"if",locations:[{start:{line:294,column:8},end:{line:294,column:44}},{start:{line:294,column:8},end:{line:294,column:44}}],line:294},"32":{loc:{start:{line:295,column:8},end:{line:295,column:44}},type:"if",locations:[{start:{line:295,column:8},end:{line:295,column:44}},{start:{line:295,column:8},end:{line:295,column:44}}],line:295},"33":{loc:{start:{line:296,column:8},end:{line:296,column:44}},type:"if",locations:[{start:{line:296,column:8},end:{line:296,column:44}},{start:{line:296,column:8},end:{line:296,column:44}}],line:296},"34":{loc:{start:{line:297,column:8},end:{line:297,column:44}},type:"if",locations:[{start:{line:297,column:8},end:{line:297,column:44}},{start:{line:297,column:8},end:{line:297,column:44}}],line:297},"35":{loc:{start:{line:318,column:25},end:{line:318,column:78}},type:"cond-expr",locations:[{start:{line:318,column:43},end:{line:318,column:47}},{start:{line:318,column:50},end:{line:318,column:78}}],line:318},"36":{loc:{start:{line:338,column:17},end:{line:338,column:52}},type:"cond-expr",locations:[{start:{line:338,column:42},end:{line:338,column:43}},{start:{line:338,column:46},end:{line:338,column:52}}],line:338},"37":{loc:{start:{line:339,column:19},end:{line:339,column:58}},type:"cond-expr",locations:[{start:{line:339,column:46},end:{line:339,column:47}},{start:{line:339,column:50},end:{line:339,column:58}}],line:339},"38":{loc:{start:{line:340,column:19},end:{line:340,column:60}},type:"cond-expr",locations:[{start:{line:340,column:46},end:{line:340,column:49}},{start:{line:340,column:52},end:{line:340,column:60}}],line:340},"39":{loc:{start:{line:341,column:20},end:{line:341,column:64}},type:"cond-expr",locations:[{start:{line:341,column:48},end:{line:341,column:52}},{start:{line:341,column:55},end:{line:341,column:64}}],line:341},"40":{loc:{start:{line:342,column:23},end:{line:342,column:50}},type:"cond-expr",locations:[{start:{line:342,column:36},end:{line:342,column:45}},{start:{line:342,column:49},end:{line:342,column:50}}],line:342},"41":{loc:{start:{line:345,column:12},end:{line:353,column:13}},type:"if",locations:[{start:{line:345,column:12},end:{line:353,column:13}},{start:{line:345,column:12},end:{line:353,column:13}}],line:345},"42":{loc:{start:{line:346,column:16},end:{line:350,column:17}},type:"if",locations:[{start:{line:346,column:16},end:{line:350,column:17}},{start:{line:346,column:16},end:{line:350,column:17}}],line:346},"43":{loc:{start:{line:365,column:19},end:{line:365,column:58}},type:"cond-expr",locations:[{start:{line:365,column:46},end:{line:365,column:47}},{start:{line:365,column:50},end:{line:365,column:58}}],line:365},"44":{loc:{start:{line:366,column:17},end:{line:366,column:52}},type:"cond-expr",locations:[{start:{line:366,column:42},end:{line:366,column:43}},{start:{line:366,column:46},end:{line:366,column:52}}],line:366},"45":{loc:{start:{line:380,column:19},end:{line:380,column:58}},type:"cond-expr",locations:[{start:{line:380,column:46},end:{line:380,column:47}},{start:{line:380,column:50},end:{line:380,column:58}}],line:380},"46":{loc:{start:{line:381,column:18},end:{line:381,column:55}},type:"cond-expr",locations:[{start:{line:381,column:44},end:{line:381,column:45}},{start:{line:381,column:48},end:{line:381,column:55}}],line:381},"47":{loc:{start:{line:395,column:8},end:{line:399,column:9}},type:"switch",locations:[{start:{line:396,column:8},end:{line:396,column:60}},{start:{line:397,column:8},end:{line:397,column:58}},{start:{line:398,column:8},end:{line:398,column:60}}],line:395},"48":{loc:{start:{line:408,column:12},end:{line:408,column:37}},type:"cond-expr",locations:[{start:{line:408,column:32},end:{line:408,column:33}},{start:{line:408,column:36},end:{line:408,column:37}}],line:408},"49":{loc:{start:{line:426,column:8},end:{line:430,column:9}},type:"if",locations:[{start:{line:426,column:8},end:{line:430,column:9}},{start:{line:426,column:8},end:{line:430,column:9}}],line:426},"50":{loc:{start:{line:427,column:19},end:{line:427,column:99}},type:"binary-expr",locations:[{start:{line:427,column:19},end:{line:427,column:39}},{start:{line:427,column:43},end:{line:427,column:99}}],line:427},"51":{loc:{start:{line:432,column:8},end:{line:441,column:9}},type:"if",locations:[{start:{line:432,column:8},end:{line:441,column:9}},{start:{line:432,column:8},end:{line:441,column:9}}],line:432},"52":{loc:{start:{line:434,column:19},end:{line:438,column:14}},type:"binary-expr",locations:[{start:{line:434,column:19},end:{line:436,column:14}},{start:{line:436,column:18},end:{line:438,column:14}}],line:434},"53":{loc:{start:{line:435,column:23},end:{line:435,column:124}},type:"binary-expr",locations:[{start:{line:435,column:23},end:{line:435,column:43}},{start:{line:435,column:47},end:{line:435,column:59}},{start:{line:435,column:63},end:{line:435,column:124}}],line:435},"54":{loc:{start:{line:437,column:23},end:{line:437,column:124}},type:"binary-expr",locations:[{start:{line:437,column:23},end:{line:437,column:43}},{start:{line:437,column:47},end:{line:437,column:59}},{start:{line:437,column:63},end:{line:437,column:124}}],line:437},"55":{loc:{start:{line:443,column:8},end:{line:451,column:9}},type:"if",locations:[{start:{line:443,column:8},end:{line:451,column:9}},{start:{line:443,column:8},end:{line:451,column:9}}],line:443},"56":{loc:{start:{line:446,column:23},end:{line:446,column:124}},type:"binary-expr",locations:[{start:{line:446,column:23},end:{line:446,column:43}},{start:{line:446,column:47},end:{line:446,column:59}},{start:{line:446,column:63},end:{line:446,column:124}}],line:446},"57":{loc:{start:{line:487,column:16},end:{line:488,column:32}},type:"if",locations:[{start:{line:487,column:16},end:{line:488,column:32}},{start:{line:487,column:16},end:{line:488,column:32}}],line:487}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0,0],"54":[0,0,0],"55":[0,0],"56":[0,0,0],"57":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();++cov_2gxvinfo49.s[0];(function(require,requirejs,define){++cov_2gxvinfo49.f[0];++cov_2gxvinfo49.s[1];define(["mersenne","underscore","PrairieGeom"],function(mersenne,_,PrairieGeom){++cov_2gxvinfo49.f[1];/** RandomGenerator constructor.

        @param {String} seed (Optional, default uses current time) Seed value for the generator, must be in base 36.
    */function RandomGenerator(seed){++cov_2gxvinfo49.f[2];++cov_2gxvinfo49.s[2];seed=seed===undefined?(++cov_2gxvinfo49.b[0][0],Date.now()):(++cov_2gxvinfo49.b[0][1],parseInt(seed,36));++cov_2gxvinfo49.s[3];this._mersenne=new mersenne.MersenneTwister19937();/* jshint camelcase: false */++cov_2gxvinfo49.s[4];this._mersenne.init_genrand(seed);}/** Return a random real between min and max (exclusive).

        @param {Number} min (Optional, default 0) The minimum possible value.
        @param {Number} max (Optional, default 1) The maximum possible value.
        @return {Number} A randomly, uniformly selected real number between min and max.
    */++cov_2gxvinfo49.s[5];RandomGenerator.prototype.randReal=function(min,max){++cov_2gxvinfo49.f[3];++cov_2gxvinfo49.s[6];min=min===undefined?(++cov_2gxvinfo49.b[1][0],0):(++cov_2gxvinfo49.b[1][1],min);++cov_2gxvinfo49.s[7];max=max===undefined?(++cov_2gxvinfo49.b[2][0],1):(++cov_2gxvinfo49.b[2][1],max);/* jshint camelcase: false */++cov_2gxvinfo49.s[8];return min+this._mersenne.genrand_real2()*(max-min);};/** Return a random integer between min and max (inclusive).

        @param {Number} min (Optional, default 0) The minimum possible value.
        @param {Number} max (Optional, default 10) The maximum possible value.
        @param {Number} step (Optional, default 1) The step incrememnt for possible values.
        @return {Number} A randomly, uniformly selected integer between min and max with given step.
    */++cov_2gxvinfo49.s[9];RandomGenerator.prototype.randInt=function(min,max,step){++cov_2gxvinfo49.f[4];++cov_2gxvinfo49.s[10];min=min===undefined?(++cov_2gxvinfo49.b[3][0],0):(++cov_2gxvinfo49.b[3][1],min);++cov_2gxvinfo49.s[11];max=max===undefined?(++cov_2gxvinfo49.b[4][0],10):(++cov_2gxvinfo49.b[4][1],max);++cov_2gxvinfo49.s[12];step=step===undefined?(++cov_2gxvinfo49.b[5][0],1):(++cov_2gxvinfo49.b[5][1],step);var n=(++cov_2gxvinfo49.s[13],(max-min)/step+1);/* jshint camelcase: false */var i=(++cov_2gxvinfo49.s[14],Math.floor(this._mersenne.genrand_real2()*n));++cov_2gxvinfo49.s[15];return min+i*step;};/** Return a non-zero random integer between min and max (inclusive).

        @param {Number} min (Optional, default 1) The minimum possible value.
        @param {Number} max (Optional, default 10) The maximum possible value.
        @param {Number} step (Optional, default 1) The step incrememnt for possible values.
        @return {Number} A randomly, uniformly selected non-zero integer between min and max with given step.
    */++cov_2gxvinfo49.s[16];RandomGenerator.prototype.randIntNonZero=function(min,max,step){++cov_2gxvinfo49.f[5];++cov_2gxvinfo49.s[17];min=min===undefined?(++cov_2gxvinfo49.b[6][0],0):(++cov_2gxvinfo49.b[6][1],min);++cov_2gxvinfo49.s[18];max=max===undefined?(++cov_2gxvinfo49.b[7][0],10):(++cov_2gxvinfo49.b[7][1],max);++cov_2gxvinfo49.s[19];step=step===undefined?(++cov_2gxvinfo49.b[8][0],1):(++cov_2gxvinfo49.b[8][1],step);var n=(++cov_2gxvinfo49.s[20],(max-min)/step+1);var i,r;++cov_2gxvinfo49.s[21];do{++cov_2gxvinfo49.s[22];/* jshint camelcase: false */i=Math.floor(this._mersenne.genrand_real2()*n);++cov_2gxvinfo49.s[23];r=min+i*step;}while(r===0);++cov_2gxvinfo49.s[24];return r;};/** Return a random boolean.

        @param {Number} trueProb (Optional, default 0.5) The probability of returning true.
        @return {Number} A randomly selected Boolean value (true or false).
    */++cov_2gxvinfo49.s[25];RandomGenerator.prototype.randBool=function(trueProb){++cov_2gxvinfo49.f[6];++cov_2gxvinfo49.s[26];trueProb=trueProb===undefined?(++cov_2gxvinfo49.b[9][0],0.5):(++cov_2gxvinfo49.b[9][1],trueProb);/* jshint camelcase: false */++cov_2gxvinfo49.s[27];if(this._mersenne.genrand_real2()<trueProb){++cov_2gxvinfo49.b[10][0];++cov_2gxvinfo49.s[28];return true;}else{++cov_2gxvinfo49.b[10][1];}++cov_2gxvinfo49.s[29];return false;};/** Return a random sign (-1 or 1).

        @param {Number} posProb (Optional, default 0.5) The probability of returning 1.
        @return {Number} A randomly selected sign value (-1 or 1).
    */++cov_2gxvinfo49.s[30];RandomGenerator.prototype.randSign=function(posProb){++cov_2gxvinfo49.f[7];++cov_2gxvinfo49.s[31];posProb=posProb===undefined?(++cov_2gxvinfo49.b[11][0],0.5):(++cov_2gxvinfo49.b[11][1],posProb);/* jshint camelcase: false */++cov_2gxvinfo49.s[32];if(this._mersenne.genrand_real2()<posProb){++cov_2gxvinfo49.b[12][0];++cov_2gxvinfo49.s[33];return 1;}else{++cov_2gxvinfo49.b[12][1];}++cov_2gxvinfo49.s[34];return-1;};/** Return a random array with real elements between min and max (exclusive).

        @param {Number} n (Optional, default 3) The length of the array.
        @param {Number} min (Optional, default 0) The minimum possible value.
        @param {Number} max (Optional, default 1) The maximum possible value.
        @return {Number} An array of random numbers.
    */++cov_2gxvinfo49.s[35];RandomGenerator.prototype.randArrayReal=function(n,min,max){++cov_2gxvinfo49.f[8];++cov_2gxvinfo49.s[36];n=n===undefined?(++cov_2gxvinfo49.b[13][0],3):(++cov_2gxvinfo49.b[13][1],n);var a=(++cov_2gxvinfo49.s[37],[]);++cov_2gxvinfo49.s[38];for(var i=0;i<n;i++){++cov_2gxvinfo49.s[39];a.push(this.randReal(min,max));}++cov_2gxvinfo49.s[40];return a;};/** Return a random array with integer elements between min and max (inclusive).

        @param {Number} n (Optional, default 3) The length of the array.
        @param {Number} min (Optional, default 0) The minimum possible value.
        @param {Number} max (Optional, default 10) The maximum possible value.
        @param {Number} step (Optional, default 1) The step incrememnt for possible values.
        @return {Number} An array of random numbers.
    */++cov_2gxvinfo49.s[41];RandomGenerator.prototype.randArrayInt=function(n,min,max,step){++cov_2gxvinfo49.f[9];++cov_2gxvinfo49.s[42];n=n===undefined?(++cov_2gxvinfo49.b[14][0],3):(++cov_2gxvinfo49.b[14][1],n);var a=(++cov_2gxvinfo49.s[43],[]);++cov_2gxvinfo49.s[44];for(var i=0;i<n;i++){++cov_2gxvinfo49.s[45];a.push(this.randInt(min,max,step));}++cov_2gxvinfo49.s[46];return a;};/** Return a non-zero random array with integer elements between min and max (inclusive).

        @param {Number} n (Optional, default 3) The length of the array.
        @param {Number} min (Optional, default 1) The minimum possible value.
        @param {Number} max (Optional, default 10) The maximum possible value.
        @param {Number} step (Optional, default 1) The step incrememnt for possible values.
        @return {Number} An array of random numbers, not all zero.
    */++cov_2gxvinfo49.s[47];RandomGenerator.prototype.randArrayIntNonZero=function(n,min,max,step){++cov_2gxvinfo49.f[10];++cov_2gxvinfo49.s[48];n=n===undefined?(++cov_2gxvinfo49.b[15][0],3):(++cov_2gxvinfo49.b[15][1],n);var a,allZero,i,e;++cov_2gxvinfo49.s[49];do{++cov_2gxvinfo49.s[50];allZero=true;++cov_2gxvinfo49.s[51];a=[];++cov_2gxvinfo49.s[52];for(i=0;i<n;i++){++cov_2gxvinfo49.s[53];e=this.randInt(min,max,step);++cov_2gxvinfo49.s[54];a.push(e);++cov_2gxvinfo49.s[55];if(e!==0){++cov_2gxvinfo49.b[16][0];++cov_2gxvinfo49.s[56];allZero=false;}else{++cov_2gxvinfo49.b[16][1];}}}while(allZero);++cov_2gxvinfo49.s[57];return a;};/** Return a random array with unique integer elements between min and max (inclusive).

        @param {Number} n (Optional, default 3) The length of the array.
        @param {Number} min (Optional, default 0) The minimum possible value.
        @param {Number} max (Optional, default 10) The maximum possible value.
        @param {Number} step (Optional, default 1) The step incrememnt for possible values.
        @return {Number} An array of unique random numbers.
    */++cov_2gxvinfo49.s[58];RandomGenerator.prototype.randArrayUniqueInt=function(n,min,max,step){++cov_2gxvinfo49.f[11];++cov_2gxvinfo49.s[59];n=n===undefined?(++cov_2gxvinfo49.b[17][0],3):(++cov_2gxvinfo49.b[17][1],n);var a=(++cov_2gxvinfo49.s[60],[]);++cov_2gxvinfo49.s[61];while(a.length<n){var e=(++cov_2gxvinfo49.s[62],this.randInt(min,max,step));var duplicate=(++cov_2gxvinfo49.s[63],false);++cov_2gxvinfo49.s[64];for(var i=0;i<n;i++){++cov_2gxvinfo49.s[65];if(a[i]==e){++cov_2gxvinfo49.b[18][0];++cov_2gxvinfo49.s[66];duplicate=true;++cov_2gxvinfo49.s[67];break;}else{++cov_2gxvinfo49.b[18][1];}}++cov_2gxvinfo49.s[68];if(!duplicate){++cov_2gxvinfo49.b[19][0];++cov_2gxvinfo49.s[69];a.push(e);}else{++cov_2gxvinfo49.b[19][1];}}++cov_2gxvinfo49.s[70];return a;};/** Return a random element from an array.

        @param {Array} arr The array of options.
        @param {Array} probs (Optional, default equal) The probabilities of each element.
        @return One of the elements of the array, chosen randomly and uniformly.
    */++cov_2gxvinfo49.s[71];RandomGenerator.prototype.randElem=function(arr,probs){++cov_2gxvinfo49.f[12];var n=(++cov_2gxvinfo49.s[72],arr.length);var i;++cov_2gxvinfo49.s[73];if(probs){++cov_2gxvinfo49.b[20][0];var tot=(++cov_2gxvinfo49.s[74],0);++cov_2gxvinfo49.s[75];for(i=0;i<n;i++){++cov_2gxvinfo49.s[76];tot+=probs[i];}var p=(++cov_2gxvinfo49.s[77],this.randReal());var sum=(++cov_2gxvinfo49.s[78],0);++cov_2gxvinfo49.s[79];for(i=0;i<n;i++){++cov_2gxvinfo49.s[80];sum+=probs[i]/tot;++cov_2gxvinfo49.s[81];if(p<sum){++cov_2gxvinfo49.b[21][0];++cov_2gxvinfo49.s[82];break;}else{++cov_2gxvinfo49.b[21][1];}}++cov_2gxvinfo49.s[83];i=Math.min(i,n-1);}else{++cov_2gxvinfo49.b[20][1];++cov_2gxvinfo49.s[84];i=this.randInt(0,n-1);}++cov_2gxvinfo49.s[85];return arr[i];};/** Return an array consisting of n copies of the given element.

        @param {Number} n The number of times to repeat the element.
        @param {Object} elem The element to repeat.
        @return {Array} An array with n elements [elem, elem, ..., elem].
    */++cov_2gxvinfo49.s[86];RandomGenerator.prototype.repeat=function(n,elem){++cov_2gxvinfo49.f[13];var arr=(++cov_2gxvinfo49.s[87],[]);++cov_2gxvinfo49.s[88];for(var i=0;i<n;i++){++cov_2gxvinfo49.s[89];arr.push(elem);}++cov_2gxvinfo49.s[90];return arr;};/** Return n random elements from an array without repetition.

        @param {Number} n The number of elements required.
        @param {Array} arr The array of options.
        @param {Array} probs (Optional) An array of element probabilities.
        @return A subset of the array, chosen randomly and uniformly.
    */++cov_2gxvinfo49.s[91];RandomGenerator.prototype.randNElem=function(n,arr,probs){++cov_2gxvinfo49.f[14];var length=(++cov_2gxvinfo49.s[92],arr.length);++cov_2gxvinfo49.s[93];if(n>length){++cov_2gxvinfo49.b[22][0];++cov_2gxvinfo49.s[94];return arr;}else{++cov_2gxvinfo49.b[22][1];}var returnArr=(++cov_2gxvinfo49.s[95],[]);var avail=(++cov_2gxvinfo49.s[96],arr.slice()),iElem,ind;++cov_2gxvinfo49.s[97];if(probs){++cov_2gxvinfo49.b[23][0];var p=(++cov_2gxvinfo49.s[98],probs.slice());}else{++cov_2gxvinfo49.b[23][1];}++cov_2gxvinfo49.s[99];for(iElem=0;iElem<n;iElem++){++cov_2gxvinfo49.s[100];if(probs){++cov_2gxvinfo49.b[24][0];++cov_2gxvinfo49.s[101];ind=this.randElem(_.range(avail.length),p);++cov_2gxvinfo49.s[102];p.splice(ind,1);}else{++cov_2gxvinfo49.b[24][1];++cov_2gxvinfo49.s[103];ind=this.randInt(0,avail.length-1);}++cov_2gxvinfo49.s[104];returnArr.push(avail[ind]);++cov_2gxvinfo49.s[105];avail.splice(ind,1);}++cov_2gxvinfo49.s[106];return returnArr;};/** Return a random permutation of 0,...,(n-1).

        @param {Number} n The number of elements in the permutation.
        @return {Array} A permutation of 0,...,(n-1).
    */++cov_2gxvinfo49.s[107];RandomGenerator.prototype.randPerm=function(n){++cov_2gxvinfo49.f[15];var a=(++cov_2gxvinfo49.s[108],[]),i,j,tmp;++cov_2gxvinfo49.s[109];for(i=0;i<n;i++){++cov_2gxvinfo49.s[110];a.push(i);}++cov_2gxvinfo49.s[111];for(i=0;i<n-1;i++){++cov_2gxvinfo49.s[112];j=this.randInt(i,n-1);++cov_2gxvinfo49.s[113];tmp=a[i];++cov_2gxvinfo49.s[114];a[i]=a[j];++cov_2gxvinfo49.s[115];a[j]=tmp;}++cov_2gxvinfo49.s[116];return a;};/** Permute an array in place with the given permutation.

        @param {Array} perm The permutation.
        @param {Array} arr The array.
    */++cov_2gxvinfo49.s[117];RandomGenerator.prototype.permuteArray=function(perm,arr){++cov_2gxvinfo49.f[16];var save=(++cov_2gxvinfo49.s[118],[]),i;++cov_2gxvinfo49.s[119];for(i=0;i<arr.length;i++){++cov_2gxvinfo49.s[120];save.push(arr[i]);}++cov_2gxvinfo49.s[121];for(i=0;i<arr.length;i++){++cov_2gxvinfo49.s[122];arr[i]=save[perm[i]];}};/** Permute the arrays in place with the given permutation.

        @param {Array} perm The permutation.
        @param {Array} a (Optional) Arrays.
    */++cov_2gxvinfo49.s[123];RandomGenerator.prototype.permute=function(perm,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9){++cov_2gxvinfo49.f[17];++cov_2gxvinfo49.s[124];if(a0){++cov_2gxvinfo49.b[25][0];++cov_2gxvinfo49.s[125];this.permuteArray(perm,a0);}else{++cov_2gxvinfo49.b[25][1];}++cov_2gxvinfo49.s[126];if(a1){++cov_2gxvinfo49.b[26][0];++cov_2gxvinfo49.s[127];this.permuteArray(perm,a1);}else{++cov_2gxvinfo49.b[26][1];}++cov_2gxvinfo49.s[128];if(a2){++cov_2gxvinfo49.b[27][0];++cov_2gxvinfo49.s[129];this.permuteArray(perm,a2);}else{++cov_2gxvinfo49.b[27][1];}++cov_2gxvinfo49.s[130];if(a3){++cov_2gxvinfo49.b[28][0];++cov_2gxvinfo49.s[131];this.permuteArray(perm,a3);}else{++cov_2gxvinfo49.b[28][1];}++cov_2gxvinfo49.s[132];if(a4){++cov_2gxvinfo49.b[29][0];++cov_2gxvinfo49.s[133];this.permuteArray(perm,a4);}else{++cov_2gxvinfo49.b[29][1];}++cov_2gxvinfo49.s[134];if(a5){++cov_2gxvinfo49.b[30][0];++cov_2gxvinfo49.s[135];this.permuteArray(perm,a5);}else{++cov_2gxvinfo49.b[30][1];}++cov_2gxvinfo49.s[136];if(a6){++cov_2gxvinfo49.b[31][0];++cov_2gxvinfo49.s[137];this.permuteArray(perm,a6);}else{++cov_2gxvinfo49.b[31][1];}++cov_2gxvinfo49.s[138];if(a7){++cov_2gxvinfo49.b[32][0];++cov_2gxvinfo49.s[139];this.permuteArray(perm,a7);}else{++cov_2gxvinfo49.b[32][1];}++cov_2gxvinfo49.s[140];if(a8){++cov_2gxvinfo49.b[33][0];++cov_2gxvinfo49.s[141];this.permuteArray(perm,a8);}else{++cov_2gxvinfo49.b[33][1];}++cov_2gxvinfo49.s[142];if(a9){++cov_2gxvinfo49.b[34][0];++cov_2gxvinfo49.s[143];this.permuteArray(perm,a9);}else{++cov_2gxvinfo49.b[34][1];}};/** Randomly shuffle the given arrays in place with the same permutation.

        @param {Array} a (Optional) Arrays.
        @return {Array} the permutation used to shuffle.
    */++cov_2gxvinfo49.s[144];RandomGenerator.prototype.shuffle=function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9){++cov_2gxvinfo49.f[18];var perm=(++cov_2gxvinfo49.s[145],this.randPerm(a0.length));++cov_2gxvinfo49.s[146];this.permute(perm,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);++cov_2gxvinfo49.s[147];return perm;};/** Make nSel near-uniform selections from nCat categories, returning the number of selections per category.

        @param {Number} nSel The number of selections.
        @param {Object} cats Either a Number (the number of categories) or an array of category weights.
        @return {Array} A length-nCat array giving the number of selections per category.
    */++cov_2gxvinfo49.s[148];RandomGenerator.prototype.randCategoryChoices=function(nSel,cats){++cov_2gxvinfo49.f[19];var catWeights=(++cov_2gxvinfo49.s[149],_.isArray(cats)?(++cov_2gxvinfo49.b[35][0],cats):(++cov_2gxvinfo49.b[35][1],_.times(cats,_.constant(1))));var nCat=(++cov_2gxvinfo49.s[150],catWeights.length);var totWeight=(++cov_2gxvinfo49.s[151],numeric.sum(catWeights));var nSelIdeals=(++cov_2gxvinfo49.s[152],numeric.mul(catWeights,nSel/totWeight));var sels=(++cov_2gxvinfo49.s[153],numeric.floor(nSelIdeals));var excessProbs=(++cov_2gxvinfo49.s[154],numeric.sub(nSelIdeals,sels));var extras=(++cov_2gxvinfo49.s[155],this.randNElem(nSel-numeric.sum(sels),_.range(nCat),excessProbs));++cov_2gxvinfo49.s[156];_(extras).each(function(i){++cov_2gxvinfo49.f[20];++cov_2gxvinfo49.s[157];sels[i]++;});++cov_2gxvinfo49.s[158];return sels;};/** Return a random polynomial.

        @param {Number} degree (Optional, default 2) The degree of the polynomial.
        @param {Number} maxCoeff (Optional, default 3) The maximum coefficient value.
        @param {Number} zeroProb (Optional, default 0.5) The additional probability to zero lower-degree coefficients.
        @param {Number} negCoeffs (Optional, default true) Whether negative coefficients are allowed.
        @return {Array} The polynomial coefficients [a_0, a_1, ..., a_n].
    */++cov_2gxvinfo49.s[159];RandomGenerator.prototype.randPoly=function(degree,maxCoeff,zeroProb,negCoeffs){++cov_2gxvinfo49.f[21];++cov_2gxvinfo49.s[160];degree=degree===undefined?(++cov_2gxvinfo49.b[36][0],2):(++cov_2gxvinfo49.b[36][1],degree);++cov_2gxvinfo49.s[161];maxCoeff=maxCoeff===undefined?(++cov_2gxvinfo49.b[37][0],3):(++cov_2gxvinfo49.b[37][1],maxCoeff);++cov_2gxvinfo49.s[162];zeroProb=zeroProb===undefined?(++cov_2gxvinfo49.b[38][0],0.5):(++cov_2gxvinfo49.b[38][1],zeroProb);++cov_2gxvinfo49.s[163];negCoeffs=negCoeffs===undefined?(++cov_2gxvinfo49.b[39][0],true):(++cov_2gxvinfo49.b[39][1],negCoeffs);var minCoeff=(++cov_2gxvinfo49.s[164],negCoeffs?(++cov_2gxvinfo49.b[40][0],-maxCoeff):(++cov_2gxvinfo49.b[40][1],0));var i,p=(++cov_2gxvinfo49.s[165],[]);++cov_2gxvinfo49.s[166];for(i=0;i<=degree;i++){++cov_2gxvinfo49.s[167];if(i<degree){++cov_2gxvinfo49.b[41][0];++cov_2gxvinfo49.s[168];if(this.randReal()<zeroProb){++cov_2gxvinfo49.b[42][0];++cov_2gxvinfo49.s[169];p.push(0);}else{++cov_2gxvinfo49.b[42][1];++cov_2gxvinfo49.s[170];p.push(this.randInt(minCoeff,maxCoeff));}}else{++cov_2gxvinfo49.b[41][1];++cov_2gxvinfo49.s[171];p.push(this.randIntNonZero(minCoeff,maxCoeff));}}++cov_2gxvinfo49.s[172];return p;};/** Return a random exponential.

        @param {Number} maxCoeff (Optional, default 3) The maximum coefficient value.
        @param {Number} maxExp (Optional, default 3) The maximum exponent value.
        @return {Object} The exponential object.
    */++cov_2gxvinfo49.s[173];RandomGenerator.prototype.randExp=function(maxCoeff,maxExp){++cov_2gxvinfo49.f[22];++cov_2gxvinfo49.s[174];maxCoeff=maxCoeff===undefined?(++cov_2gxvinfo49.b[43][0],3):(++cov_2gxvinfo49.b[43][1],maxCoeff);++cov_2gxvinfo49.s[175];maxExp=maxExp===undefined?(++cov_2gxvinfo49.b[44][0],3):(++cov_2gxvinfo49.b[44][1],maxExp);++cov_2gxvinfo49.s[176];return{coeff:this.randIntNonZero(-maxCoeff,maxCoeff),exp:this.randIntNonZero(-maxExp,maxExp)};};/** Return a random trig function.

        @param {Number} maxCoeff (Optional, default 3) The maximum coefficient value.
        @param {Number} maxFreq (Optional, default 3) The maximum frequency value.
        @return {Object} The trig function object.
    */++cov_2gxvinfo49.s[177];RandomGenerator.prototype.randTrig=function(maxCoeff,maxFreq){++cov_2gxvinfo49.f[23];++cov_2gxvinfo49.s[178];maxCoeff=maxCoeff===undefined?(++cov_2gxvinfo49.b[45][0],3):(++cov_2gxvinfo49.b[45][1],maxCoeff);++cov_2gxvinfo49.s[179];maxFreq=maxFreq===undefined?(++cov_2gxvinfo49.b[46][0],3):(++cov_2gxvinfo49.b[46][1],maxFreq);++cov_2gxvinfo49.s[180];return{coeff:this.randIntNonZero(-maxCoeff,maxCoeff),fcn:this.randElem(["sin","cos"]),freq:this.randIntNonZero(-maxFreq,maxFreq)};};/** Return a random function.

        @return {Object} The function object.
    */++cov_2gxvinfo49.s[181];RandomGenerator.prototype.randFunc=function(){++cov_2gxvinfo49.f[24];++cov_2gxvinfo49.s[182];/* jshint indent: false */switch(this.randInt(1,3)){case 1:++cov_2gxvinfo49.b[47][0];++cov_2gxvinfo49.s[183];return{fcn:"poly",data:this.randPoly()};case 2:++cov_2gxvinfo49.b[47][1];++cov_2gxvinfo49.s[184];return{fcn:"exp",data:this.randExp()};case 3:++cov_2gxvinfo49.b[47][2];++cov_2gxvinfo49.s[185];return{fcn:"trig",data:this.randTrig()};}};/** Return an array of random functions.

        @param {Number} n (Optional, default 3) The length of the array to return.
        @return {Array} The array of function objects.
    */++cov_2gxvinfo49.s[186];RandomGenerator.prototype.randArrayFunc=function(n){++cov_2gxvinfo49.f[25];++cov_2gxvinfo49.s[187];n=n===undefined?(++cov_2gxvinfo49.b[48][0],3):(++cov_2gxvinfo49.b[48][1],n);var a=(++cov_2gxvinfo49.s[188],[]);++cov_2gxvinfo49.s[189];for(var i=0;i<n;i++){++cov_2gxvinfo49.s[190];a.push(this.randFunc());}++cov_2gxvinfo49.s[191];return a;};/** Determine how difficult it is to solve for an answer variablem given certain other variables.

        @param {Number} answerInd The index of the answer variable to find.
        @param {Array} givenInds A list of indexes that are given.
        @param {Array} lhs The left-hand-side of the system.
        @return {Number} Difficulty level (1 = single eqn, 2 = 2 sequential eqns, 3 = 2 simultaneous eqns, 4 = harder)
    */++cov_2gxvinfo49.s[192];RandomGenerator.prototype.solveDifficulty=function(answerInd,givenInds,lhs){++cov_2gxvinfo49.f[26];var unknownInds=(++cov_2gxvinfo49.s[193],_.chain(_.range(0,lhs[0].length)).difference(givenInds).without(answerInd).value());++cov_2gxvinfo49.s[194];if(_(lhs).some(function(row){++cov_2gxvinfo49.f[27];++cov_2gxvinfo49.s[195];return(++cov_2gxvinfo49.b[50][0],row[answerInd]!==0)&&(++cov_2gxvinfo49.b[50][1],_(unknownInds).every(function(i){++cov_2gxvinfo49.f[28];++cov_2gxvinfo49.s[196];return row[i]===0;}));})){++cov_2gxvinfo49.b[49][0];++cov_2gxvinfo49.s[197];return 1;}else{++cov_2gxvinfo49.b[49][1];}++cov_2gxvinfo49.s[198];if(_(unknownInds).some(function(i){++cov_2gxvinfo49.f[29];var extraUnknownInds=(++cov_2gxvinfo49.s[199],_(unknownInds).without(i));++cov_2gxvinfo49.s[200];return(++cov_2gxvinfo49.b[52][0],_(lhs).some(function(row){++cov_2gxvinfo49.f[30];++cov_2gxvinfo49.s[201];return(++cov_2gxvinfo49.b[53][0],row[answerInd]!==0)&&(++cov_2gxvinfo49.b[53][1],row[i]!==0)&&(++cov_2gxvinfo49.b[53][2],_(extraUnknownInds).every(function(i){++cov_2gxvinfo49.f[31];++cov_2gxvinfo49.s[202];return row[i]===0;}));}))&&(++cov_2gxvinfo49.b[52][1],_(lhs).some(function(row){++cov_2gxvinfo49.f[32];++cov_2gxvinfo49.s[203];return(++cov_2gxvinfo49.b[54][0],row[answerInd]===0)&&(++cov_2gxvinfo49.b[54][1],row[i]!==0)&&(++cov_2gxvinfo49.b[54][2],_(extraUnknownInds).every(function(i){++cov_2gxvinfo49.f[33];++cov_2gxvinfo49.s[204];return row[i]===0;}));}));})){++cov_2gxvinfo49.b[51][0];++cov_2gxvinfo49.s[205];return 2;}else{++cov_2gxvinfo49.b[51][1];}++cov_2gxvinfo49.s[206];if(_(unknownInds).some(function(i){++cov_2gxvinfo49.f[34];var extraUnknownInds=(++cov_2gxvinfo49.s[207],_(unknownInds).without(i));var usefulRows=(++cov_2gxvinfo49.s[208],_(lhs).filter(function(row){++cov_2gxvinfo49.f[35];++cov_2gxvinfo49.s[209];return(++cov_2gxvinfo49.b[56][0],row[answerInd]!==0)&&(++cov_2gxvinfo49.b[56][1],row[i]!==0)&&(++cov_2gxvinfo49.b[56][2],_(extraUnknownInds).every(function(i){++cov_2gxvinfo49.f[36];++cov_2gxvinfo49.s[210];return row[i]===0;}));}));++cov_2gxvinfo49.s[211];return usefulRows.length>=2;})){++cov_2gxvinfo49.b[55][0];++cov_2gxvinfo49.s[212];return 3;}else{++cov_2gxvinfo49.b[55][1];}++cov_2gxvinfo49.s[213];return 4;};/** Determine the maximum solution difficulty over a range of answer variables.

        @param {Array} answerInds The indexes of the answer variables to find.
        @param {Array} givenInds A list of indexes that are given.
        @param {Array} lhs The left-hand-side of the system.
        @return {Number} Maximum difficulty level over the answerInds (see solveDifficulty()).
    */++cov_2gxvinfo49.s[214];RandomGenerator.prototype.maxSolveDifficulty=function(answerInds,givenInds,lhs){++cov_2gxvinfo49.f[37];var that=(++cov_2gxvinfo49.s[215],this);++cov_2gxvinfo49.s[216];return _.chain(answerInds).map(function(answerInd){++cov_2gxvinfo49.f[38];++cov_2gxvinfo49.s[217];return that.solveDifficulty(answerInd,givenInds,lhs);}).max().value();};/** Choose variables to specify so that the answer is easy to find.

        @param {Number} difficulty A scalar measure of difficulty (see solveDifficulty()).
        @param {Array} varGroups An array of groups, each being an array of variable indices.
        @param {Number} answerGroup Which group is the desired answer.
        @param {Array} lhs The left-hand-side of the equation system.
        @return {Array} List of groups to specify, or null if no solution could be found.
    */++cov_2gxvinfo49.s[218];RandomGenerator.prototype.chooseGiven=function(difficulty,varGroups,answerGroup,lhs){++cov_2gxvinfo49.f[39];var givenGroups,givenInds,maxDifficulty,g;var nTrials=(++cov_2gxvinfo49.s[219],0);++cov_2gxvinfo49.s[220];do{++cov_2gxvinfo49.s[221];givenGroups=[];++cov_2gxvinfo49.s[222];remainingGroups=_(_.range(0,varGroups.length)).without(answerGroup);++cov_2gxvinfo49.s[223];givenInds=[];++cov_2gxvinfo49.s[224];maxDifficulty=this.maxSolveDifficulty(varGroups[answerGroup],givenInds,lhs);++cov_2gxvinfo49.s[225];while(maxDifficulty>difficulty){++cov_2gxvinfo49.s[226];if(nTrials++>1000){++cov_2gxvinfo49.b[57][0];++cov_2gxvinfo49.s[227];return null;}else{++cov_2gxvinfo49.b[57][1];}// failure
++cov_2gxvinfo49.s[228];g=this.randElem(remainingGroups);++cov_2gxvinfo49.s[229];givenGroups.push(g);++cov_2gxvinfo49.s[230];remainingGroups=_(remainingGroups).without(g);++cov_2gxvinfo49.s[231];givenInds=givenInds.concat(varGroups[g]);++cov_2gxvinfo49.s[232];maxDifficulty=this.maxSolveDifficulty(varGroups[answerGroup],givenInds,lhs);}}while(maxDifficulty!==difficulty);++cov_2gxvinfo49.s[233];return givenGroups;};++cov_2gxvinfo49.s[234];return{RandomGenerator:RandomGenerator};});})(requirejsVars.require,requirejsVars.requirejs,requirejsVars.define);